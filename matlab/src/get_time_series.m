function [schaefer,yeo,voxel,thomas] = get_time_series(out_dir)

warning('off','MATLAB:table:RowsAddedExistingVars')

% Load Schaefer data and network labels
schaefer = struct();
schaefer.data = readtable(fullfile(out_dir,'schaefer.csv'));
schaefer.info = readtable(fullfile(out_dir,'schaefer-networks.csv'));

% Get actual varnames from the data, and re-order network names and labels
% to match
schaefer.info = outerjoin( ...
    table(schaefer.data.Properties.VariableNames','VariableNames',{'Region'}), ...
    schaefer.info, ...
    'Keys',{'Region'}, ...
    'MergeKeys',true, ...
    'Type','left' ...
    );

% Same for Yeo ROIs
yeo = struct();
yeo.data = readtable(fullfile(out_dir,'yeo.csv'));
yeo.info = readtable(fullfile(out_dir,'yeo-networks.csv'));
yeo.info = outerjoin( ...
    table(yeo.data.Properties.VariableNames','VariableNames',{'Region'}), ...
    yeo.info, ...
    'Keys',{'Region'}, ...
    'MergeKeys',true, ...
    'Type','left' ...
    );

% And Yeo voxels
voxel = struct();
voxel.data = readtable(fullfile(out_dir,'yeo-voxels.csv'));
voxel.info = readtable(fullfile(out_dir,'yeo-voxels-networks.csv'));
voxel.info = outerjoin( ...
    table(voxel.data.Properties.VariableNames','VariableNames',{'Region'}), ...
    voxel.info, ...
    'Keys',{'Region'}, ...
    'MergeKeys',true, ...
    'Type','left' ...
    );

% And for THOMAS. The labels don't match any MNI image so we assign NaN.
% And there are no community assignments so we assign NaN for those too.
thomas = struct();
thomas.data = readtable(fullfile(out_dir,'thomas.csv'));
thomas.info = table( ...
    thomas.data.Properties.VariableNames', ...
    'VariableNames',{'Region'} ...
    );
thomas.info.Label(:,1) = nan;
thomas.info.NetworkNum(:,1) = nan;
thomas.info.Network(:,1) = {''};

